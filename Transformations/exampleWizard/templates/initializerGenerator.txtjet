<%@jet package = "generators" imports="java.util.* java.util.regex.*" class = "InitializerGenerator" %>

<% Map<String, List<String>>factMap = (Map<String, List<String>>)argument;
   Set<String> reservedWords = new HashSet<String>();
   reservedWords.add("public");
   reservedWords.add("private");
   reservedWords.add("protected");
   List<String> classNames = new ArrayList<String>(factMap.keySet());
   Pattern literalPattern = Pattern.compile("'.*'");
   Pattern digitPattern = Pattern.compile("[0-9]+");
   Pattern booleanPattern = Pattern.compile("true|false");
   for(String className : classNames){%>
import model.<%=className%>;   
   <%}%>
import java.util.*;   
   
public class Initializer{
<% List<String> instNames = new ArrayList<String>();
   List<String> listNames = new ArrayList<String>();
   String instName = null;
   String listName = null;
   String tmp = null;
   String[] data = null;
   for(String className : classNames){
     instName = className.substring(0, 1).toLowerCase() + className.substring(1) + "Inst";
     instNames.add(instName);
     listName = instName + "List";
     listNames.add(listName);%>
  private List<<%=className%>> <%=listName%> = null;
  <%}%>
  
  public List<Object> initialize(){
     List<Object> result = new ArrayList<Object>();
  	 <%String strArgu = null;
  	   String className = null;
  	   for(int i = 0; i < classNames.size(); i++){
  		 listName = listNames.get(i);
  	     instName = instNames.get(i);
         className = classNames.get(i);%>   
     <%=listNames.get(i)%> = new ArrayList<<%=classNames.get(i)%>>();
     <%=className%> <%=instName%>=null;
    <%List<String> facts = factMap.get(classNames.get(i));
       for(int j = 1; j < facts.size(); j++){
         tmp = facts.get(j);

         //Eric's fix in case tmp doesn't have ( and/or )
         int start = 0;
         int end = tmp.length();
         if (tmp.indexOf("(") > -1)
         	start = tmp.indexOf("(") + 1;
          if (tmp.indexOf(")") > -1)
         	end = tmp.indexOf(")");        
         strArgu = tmp.substring(start, end);
         data = strArgu.split(",");
         
         StringBuffer buffer = new StringBuffer();
         for(int k = 0; k < data.length; k++){
           String curData = data[k].trim();
           if(literalPattern.matcher(curData).matches()){
             curData = "\"" + curData.substring(1, curData.length() -1) + "\"";
           }else if(booleanPattern.matcher(curData).matches()){
           }else if(digitPattern.matcher(curData).matches()){
           }
           else{
             curData = "\"" + curData + "\"";
           }
           buffer.append(curData).append(",");
         }buffer.setLength(buffer.length() - 1);%>
         
     <%=instName%> = new <%=className%>(<%=buffer.toString()%>);
     <%=listName%>.add(<%=instName%>);
      <%}%>
     result.add(<%=listName%>);	
  	 <%}%>
     return result;
  }
}   